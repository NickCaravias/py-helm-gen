name: Build and deploy to PyPI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        retention-days: 5

  approve-test-deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: trstringer/manual-approval@v1
      with:
        secret: ${{ github.TOKEN }}
        approvers: nickcaravias
        minimum-approvals: 1
        issue-title: "Deploying to Test PyPI"
        issue-body: "Please approve or deny the deployment to Test PyPI"

  deploy-test:
    needs: approve-test-deploy
    environment: test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install twine
      run: pip install twine

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Upload to Test PyPI
      run: |
        twine upload --repository testpypi dist/*
      env:
        TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}

  approve-prod-deploy:
    needs: deploy-test
    runs-on: ubuntu-latest
    steps:
    - uses: trstringer/manual-approval@v1
      with:
        secret: ${{ github.TOKEN }}
        approvers: nickcaravias
        minimum-approvals: 1
        issue-title: "Deploying to Production PyPI"
        issue-body: "Please approve or deny the deployment to Production PyPI"

  deploy-prod:
    needs: approve-prod-deploy
    environment: production
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install twine
      run: pip install twine

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Upload to PyPI
      run: |
        twine upload dist/*
      env:
        TWINE_USERNAME: ${{ secrets.PROD_PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PROD_PYPI_API_TOKEN }}